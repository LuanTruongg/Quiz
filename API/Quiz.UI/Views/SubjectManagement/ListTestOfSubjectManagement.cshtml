@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    ApiResult<PagedResult<TestStructureItem>> listTestStructure = ViewBag.ListTestStructure;
}
@using Microsoft.AspNetCore.Http
@using Quiz.DTO.TestStructureManagement
@using Quiz.DTO.BaseResponse
@using Quiz.DTO.UserTestManagement
<div class="container-fluid">
    <h1 class="mt-4">@ViewData["SubjectName"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="SubjectManagement" asp-action="Index">Danh sách môn học</a></li>
        <li class="breadcrumb-item active">@ViewData["SubjectName"]</li>
    </ol>
    <div class="card mb-4">

        <div class="card-header">
            <div class="row d-flex align-content-between">
                <div class="col-md-6">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-9 p-0">
                                <input type="text" name="search" class="form-control" value="@ViewBag.Search" />
                            </div>
                            <div class="col-md-3 p-0">
                                <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-md-6 d-flex justify-content-end">
                    <div class="col-md-2">
                        @Html.ActionLink(
                        "Tạo bài thi",
                        "Create",
                        "TestStructure",
                        new { subjectId = ViewData["SubjectId"]},
                        new { @class = "btn btn-success"})
                    </div>
                    <div class="col-md-3">
                        @Html.ActionLink(
                        "Tạo bài thi Speaking",
                        "CreateSpeaking",
                        "TestStructure",
                        new { subjectId = ViewData["SubjectId"]},
                        new { @class = "btn btn-success"})
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (ViewBag.SuccessMsg != null)
            {
                <div id="msgAlert" class="alert alert-success" role="alert">
                    @ViewBag.SuccessMsg
                </div>
            }
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Tên bài thi</th>
                        <th scope="col">Thời gian</th>
                        <th scope="col">Số lượng câu hỏi</th>
                        <th scope="col">Giá</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int i = 1;
                        foreach (var item in listTestStructure.ResultObj.Items)
                        {
                        <tr>
                            <td>
                                @{
                                    @Html.DisplayFor(modelItem => i);
                                    i++;
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                               @Html.DisplayFor(modelItem => item.Time)
                            </td>
                            <td>
                               @Html.DisplayFor(modelItem => item.NumberOfQuestion)
                            </td>
                            <td>
                                @{
                                    if (item.IsFree == true)
                                    {
                                        <span>Free</span>
                                    }
                                    else
                                    {
                                            @Html.DisplayFor(modelItem => item.Price)
                                        }
                                    }
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <a class="nav-link active dropdown-toggle" href="#" data-bs-toggle="dropdown">
                                            <i class="fa-light fa-ellipsis-vertical"></i>
                                        </a>
                                        <ul class="dropdown-menu">
                                            <li>
                                                @{
                                                    var subjectId = ViewData["SubjectId"];
                                                }
                                                @Html.ActionLink(
                                                    "Xem kết quả", 
                                                    "ListResultTested", 
                                                    "UserTestManagement", 
                                                    new GetListResultUserTestRequest { 
                                                        TestStructureId= item.TestStructureId,
                                                        Page=1,
                                                        PageSize = 5,
                                                        SubjectId = subjectId.ToString()
                                                    },
                                                    new { @class = "dropdown-item"})
                                            </li>
                                            <li>
                                                @Html.ActionLink("Xem người mua", "GetListUserBougthTest","SubjectManagement", new { testStructureId=item.TestStructureId, subjectId = ViewData["SubjectId"] },new { @class = "dropdown-item"})
                                            </li>
                                        </ul>
                                </div>
                            </td>
                        </tr>
                        }
                     }
                </tbody>
            </table>
        </div>
    </div>
    @await Component.InvokeAsync("Pager", listTestStructure.ResultObj)
</div>