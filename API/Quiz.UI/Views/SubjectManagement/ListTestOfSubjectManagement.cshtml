@{
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
    ApiResult<PagedResult<TestStructureItem>> listTestStructure = ViewBag.ListTestStructure;
}
@using Microsoft.AspNetCore.Http
@using Quiz.DTO.TestStructureManagement
@using Quiz.DTO.BaseResponse


<div class="container-fluid">
    <h1 class="mt-4">@ViewData["SubjectName"]</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Trang chủ</a></li>
        <li class="breadcrumb-item active">@ViewData["SubjectName"]</li>
    </ol>
    <div class="card mb-4">

        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    @Html.ActionLink(
                        "Tạo bài thi",
                        "Create",
                        "TestStructure",
                        new { subjectId = ViewData["SubjectId"], subjectName = @ViewData["SubjectName"]},
                        new { @class = "btn btn-success"})
                </div>
                <div class="col-md-6 col-xs-12">
                    @Html.ActionLink(
                        "Thêm câu hỏi",
                        "Create",
                        "Question",
                        new { subjectId = ViewData["SubjectId"]},
                        new { @class = "btn btn-success"})
                </div>
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-9">
                                <input type="text" name="keyword" class="form-control" value="@ViewBag.Keyword" />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary">Tìm</button>
                                <button type="button" class="btn btn-dark" onclick="window.location.href='Users/Index'">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card mb-4"></div>
        <div class="card-body">
            @if (ViewBag.SuccessMsg != null)
            {
                <div id="msgAlert" class="alert alert-success" role="alert">
                    @ViewBag.SuccessMsg
                </div>
            }
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>
                            Tên bài thi
                        </th>
                        <th>
                            Thời gian
                        </th>
                        <th>
                            Số lượng câu hỏi
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in listTestStructure.ResultObj.Items)
                     {
                     <tr>
                         <td>
                             @Html.DisplayFor(modelItem => item.Name)
                         </td>
                         <td>
                            @Html.DisplayFor(modelItem => item.Time)
                         </td>
                         <td>
                            @Html.DisplayFor(modelItem => item.NumberOfQuestion)
                         </td>
                         <td>
                             @Html.ActionLink("Xem bài thi", "Details", new { id=item.TestStructureId },new { @class = "btn btn-primary btn-sm"}) |
                             @Html.ActionLink("Xem bộ câu hỏi", "Index", "Quenstion", new { id=item.TestStructureId },new { @class = "btn btn-primary btn-sm"}) |
                             @Html.ActionLink("Xóa", "Delete", new { id=item.TestStructureId },new { @class = "btn btn-primary btn-sm"})
                         </td>
                     </tr>
                     }
                </tbody>
            </table>
        </div>
    </div>
    @await Component.InvokeAsync("Pager", listTestStructure.ResultObj)
</div>