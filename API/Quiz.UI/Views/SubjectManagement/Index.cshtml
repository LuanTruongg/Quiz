﻿@using Quiz.DTO.SubjectManagement
﻿@using Quiz.DTO.BaseResponse
@model PagedResult<SubjectItem>
@{
    ViewData["Title"] = "Danh sách môn học";
    Layout = "~/Views/Shared/_LayoutTeacher.cshtml";
}
@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);
    </script>
}
<style>
    @@media all and (min-width: 992px) {
        .navbar .nav-item .dropdown-menu {
            display: none;
        }

        .navbar .nav-item:hover .nav-link {
        }

        .navbar .nav-item:hover .dropdown-menu {
            display: block;
        }

        .navbar .nav-item .dropdown-menu {
            margin-top: 0;
        }

        .navbar {
            font-size: 20px
        }
    }

    @@media all and (min-width: 992px) {
        .dropdown-menu li {
            position: relative;
        }

        .nav-item .submenu {
            display: none;
            position: absolute;
            left: 100%;
            top: -7px;
        }

        .nav-item .submenu-left {
            right: 100%;
            left: auto;
        }

        .dropdown-menu > li:hover {
            background-color: #f1f1f1
        }

            .dropdown-menu > li:hover > .submenu {
                display: block;
            }
    }
    /* ============ desktop view .end// ============ */

    /* ============ small devices ============ */
    @@media (max-width: 991px) {
        .dropdown-menu .dropdown-menu {
            margin-left: 0.7rem;
            margin-right: 0.7rem;
            margin-bottom: .5rem;
        }
    }
    /* ============ small devices .end// ============ */
</style>
<div class="container-fluid">
    <h1>Danh sách môn học</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Danh sách môn học</li>
    </ol>
    <div class="card mb-4">

        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-9">
                                <input type="text" name="search" class="form-control" value="@ViewBag.Search" />
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (ViewBag.SuccessMsg != null)
            {
                <div id="msgAlert" class="alert alert-success" role="alert">
                    @ViewBag.SuccessMsg
                </div>
            }
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Mã môn</th>
                        <th scope="col">Tên môn</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int i = 1;
                        foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @{
                                        @Html.DisplayFor(modelItem => i);
                                        i++;
                                    }
                                </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubjectId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SubjectId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                <div class="dropdown">
                                    <a class="nav-link active dropdown-toggle" href="#" data-bs-toggle="dropdown">
                                        <i class="fa-light fa-ellipsis-vertical"></i>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li>
                                            @Html.ActionLink(
                                            "Xem bài thi",
                                            "ListTestOfSubjectManagement",
                                            "SubjectManagement",
                                            new { subjectId=item.SubjectId},
                                            new{@class = "dropdown-item"})
                                        </li>
                                        <li>
                                            @Html.ActionLink(
                                            "Xem bộ câu hỏi",
                                            "Index",
                                            "Question",
                                            new { subjectId=item.SubjectId },
                                            new{@class = "dropdown-item"})
                                        </li>      
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
    @await Component.InvokeAsync("Pager", Model)
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // make it as accordion for smaller screens
        if (window.innerWidth < 992) {

            // close all inner dropdowns when parent is closed
            document.querySelectorAll('.navbar .dropdown').forEach(function (everydropdown) {
                everydropdown.addEventListener('hidden.bs.dropdown', function () {
                    // after dropdown is hidden, then find all submenus
                    this.querySelectorAll('.submenu').forEach(function (everysubmenu) {
                        // hide every submenu as well
                        everysubmenu.style.display = 'none';
                    });
                })
            });

            document.querySelectorAll('.dropdown-menu a').forEach(function (element) {
                element.addEventListener('click', function (e) {
                    let nextEl = this.nextElementSibling;
                    if (nextEl && nextEl.classList.contains('submenu')) {
                        // prevent opening link if link needs to open dropdown
                        e.preventDefault();
                        if (nextEl.style.display == 'block') {
                            nextEl.style.display = 'none';
                        } else {
                            nextEl.style.display = 'block';
                        }

                    }
                });
            })
        }
        // end if innerWidth
    });
</script>
